import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Footer from "../components/Footer";
import Header from "../components/Header";
import { collection, doc, getDoc, getDocs, query } from "firebase/firestore";
import { db } from "../firebaseConfig";
import InfoCard from "../components/InfoCard";
import ClassHeading from "../components/ClassHeading";

export default function Class() {
	//const {img, name,  type, description, ratings, address, price, category} = router.params;

	const [data, setData] = useState([]);
	const [loading, setLoading] = useState(false);
	const router = useRouter();
	const { id } = router.query;

	const fetch = async (id) => {
		setLoading(true);
		if (id) {
			const docRef = doc(db, "classes", id);
			const docSnap = await getDoc(docRef);
			const data = docSnap.data();
			setData(data);
			setLoading(false);
		} else {
			setLoading(false);
		}
	};

	useEffect(() => {
		if (!router.isReady) return;
		const { id } = router.query;
		fetch(id);
	}, [router.isReady, router.query]);

	return (
		<div>
			<Head>
				<title>pocketclass</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/pc_favicon.ico" />
			</Head>

			{/* header */}
			<Header />

			{/* body */}
			<main className="max-w-7xl mx-auto px-1 py-8 sm:px-1">
				{loading ? (
					<section>
						<h1 className="font-bold text-2xl text-center">Loading...</h1>
					</section>
				) : (
					<ClassHeading
						key={data.id} // should have an id
						id={id}
						type={data.Type}
						name={data.Name}
						images={data.Images}
						description={data.Description}
						pricing={data.Pricing}
						about={data.About}
						experience={data.Experience}
						funfact={data.FunFact}
						ratings={[data.Ratings]}
						location={data.Location}
						// longitude={data.Location.toJSON().getLongitude()}
						// latitude={data.Location.toJSON().getLatitude()}
						address={data.Address}
						price={data.Price}
						category={data.Category}
						data={data}
					/>
				)}
			</main>
			<Footer />
		</div>
	);

	// export default Class;
}
