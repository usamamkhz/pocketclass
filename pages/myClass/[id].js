import {
	collection,
	doc,
	getDoc,
	getDocs,
	onSnapshot,
	query,
	where,
} from "firebase/firestore";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import Header from "../../components/Header";
import { auth, db } from "../../firebaseConfig";
import InfoCard from "../../components/InfoCard";
import { useAuthState } from "react-firebase-hooks/auth";

const MyClass = () => {
	const router = useRouter();
	const [userData, setUserData] = useState();
	const [myClass, setMyClass] = useState([]);
	const [reviews, setReviews] = useState([]);

	const [user, loading, error] = useAuthState(auth);

	const { id } = router.query;

	const getUserInfo = async (id) => {
		const docRef = doc(db, "Users", id);
		const data = await getDoc(docRef);
		setUserData(data.data());
	};

	const getClass = async (q) => {
		const querySnapshot = await getDocs(q);
		let temp = [];

		querySnapshot.forEach((doc) => {
			temp.push({ ...doc.data(), id: doc.id });
			// setMyClass([...myClass, temp])
		});
		setMyClass(temp);
	};

	useEffect(() => {
		if (id) {
			getUserInfo(id);
		}
	}, [id]);

	useEffect(() => {
		return onSnapshot(collection(db, "Reviews"), (snapshot) => {
			setReviews(snapshot.docs.map((doc) => [{ ...doc.data(), id: doc.id }]));
		});
	}, []);

	useEffect(() => {
		if (id) {
			const q = query(
				collection(db, "classes"),
				where("classCreator", "==", id)
			);
			getClass(q);
		}
	}, [id]);

	if (!userData || !id || loading) {
		return (
			<section className="flex justify-center items-center min-h-[100vh]">
				<Image src="/Rolling-1s-200px.svg" width={"60px"} height={"60px"} />
			</section>
		);
	}

	if (!user) {
		router.push("/");
	}

	console.log(myClass);

	return (
		<div className="myClassesContainer mx-auto">
			<Head>
				<title>My Class</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/pc_favicon.ico" />
			</Head>

			{/* header */}
			<Header />

			<h1 className="text-center text-4xl font-bold py-[50px]">My Classes</h1>

			{userData?.category === "instructor" && (
				<div className="instructorContainer max-w-[1450px] mx-auto">
					{
						<div className="flex flex-col w-[full]">
							{myClass.length !== 0 ? (
								myClass?.map((data) => (
									<InfoCard
										key={data.id} // should have an id
										id={data.id}
										type={data.Type}
										latitude={data.latitude}
										name={data.Name}
										images={data.Images}
										description={data.Description}
										longitude={data.longitude}
										reviews={reviews}
										address={data.address}
										price={data.price}
										category={data.category}
									/>
								))
							) : (
								<p className="text-center text-xl w-full text-logo-red">
									No Classes Found
								</p>
							)}
						</div>
					}
				</div>
			)}

			{userData?.category === "student" && (
				<div className="studentContainer max-w-[1450px] mx-auto">
					<p className="text-xl text-center">Student Class</p>
				</div>
			)}
		</div>
	);
};

export default MyClass;
