import Head from "next/head";
import Image from "next/image";
import Footer from "../../components/Footer";
import Header from "../../components/Header";

import { Router, useRouter } from "next/router";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth, db } from "../../firebaseConfig";
import { useState } from "react";
import { doc, getDoc } from "firebase/firestore";
import { useEffect } from "react";
import { Navigation, Pagination } from "swiper";
import { Swiper, SwiperSlide } from "swiper/react";

import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";

export default function Profile() {

    const [user, loading, error] = useAuthState(auth);
    const [userData, setUserData] = useState()

    const router = useRouter()

    const { id } = router.query

    const getUserInfo = async (id) => {
        const docRef = doc(db, "Users", id);
        const data = await getDoc(docRef);
        setUserData(data.data())
    }

    useEffect(() => {
        if (id) {
            getUserInfo(id)
        }
    }, [id])


    if (!userData) {
        return <section className="flex justify-center items-center min-h-[100vh]">
            <Image src="/Rolling-1s-200px.svg" width={'60px'} height={"60px"} />
        </section>
    }

    return (
      <div className="mx-auto">
        <Head>
          <title>Profile</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/pc_favicon.ico" />
        </Head>
        {/* header */}
        <Header />
        {/* banner */}

        <div className="max-w-5xl mx-auto px-8 py-8 sm:px-16 h-[auto]">
          <h1 className="text-center text-4xl pb-[50px] font-bold">Profile</h1>

          {userData?.images && userData?.images?.length !== 0 && (
            <div className="w-[100%] h-[auto] max-w-[80vw] mb-[50px]">
              <Swiper
                navigation={true}
                pagination={true}
                modules={[Navigation, Pagination]}
                className="mySwiper"
              >
                {userData?.images?.map((img) => {
                  return (
                    <SwiperSlide className="flex justify-center items-center">
                      <img
                        className="rounded-xl h-[auto] lg:w-[50%] sm:w-[70%]"
                        src={img}
                        alt="images"
                      />
                    </SwiperSlide>
                  );
                })}
              </Swiper>
            </div>
          )}

          {userData.profileImage && (
            <img
              src={userData?.profileImage}
              referrerpolicy="no-referrer"
              className="rounded-full block w-[80px] mx-auto"
            />
          )}

          {user && user.uid === id && (
            <button
              onClick={() => {
                router.push({
                  pathname: `/updateProfile/${user.uid}`,
                });
              }}
              type="submit"
              className=" w-[40%] block mx-auto my-5 active:scale-105 active:duration-75 transition-all hover:scale-[1.01]  ease-in-out transform py-1 bg-logo-red rounded-xl text-white font-semibold text-sm"
            >
              Edit Profile
            </button>
          )}

          <div className="overflow-hidden bg-white drop-shadow-2xl sm:rounded-lg mt-10 mb-10">
            <div className="px-4 py-5 sm:px-6">
              <h3 className="text-lg font-medium leading-6 text-gray-900">
                Profile Information
              </h3>
              <p className="mt-1 max-w-2xl text-sm text-gray-500">
                  {userData.profileDescription ? (
                      <p>{userData.profileDescription}</p>
                    ) : (
                      <p className="">Not Given</p>
                    )}</p>
            </div>
            <div className="border-t border-gray-200">
              <dl>
                <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">
                    First Name
                  </dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                    {userData.firstName ? (
                      <p>{userData.firstName}</p>
                    ) : (
                      <p className="">Not Given</p>
                    )}
                  </dd>
                </div>
                <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">
                    Last Name
                  </dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {userData.lastName ? (
                        <p className="">
                        {userData.lastName}
                        </p>
                    ) : (
                        <p className="">Not Given</p>
                    )}
                  </dd>
                </div>
                <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">
                    Full Name
                  </dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {userData.firstName && userData.lastName ? (
                <p className="">
                  {userData.firstName + " " + userData.lastName}
                </p>
              ) : user?.displayName ? (
                <p className="">
                  {user?.displayName}
                </p>
              ) : (
                <p>Not Given</p>
              )}
                  </dd>
                </div>
                <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">Email</dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  <p>{userData?.email}</p>
                  </dd>
                </div>
                <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">Role</dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {
                  <p>
                    {" "}
                    {userData.category.charAt(0).toUpperCase() +
                      userData.category.slice(1)}
                  </p>
                }
                  </dd>
                </div>
                <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">Gender</dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {userData.gender ? (
                  <p>
                    {userData.gender}
                  </p>
                ) : (
                  <p>Not Given</p>
                )}
                  </dd>
                </div>
                <div className="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">Date of Birth</dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {userData.dob ? (
                  <p>
                   {userData.dob}
                  </p>
                ) : (
                  <p>
                    Not Given
                  </p>
                )}
                  </dd>
                </div>
                <div className="bg-white px-4 py-5 sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6">
                  <dt className="text-sm font-medium text-gray-500">Phone Number</dt>
                  <dd className="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                  {userData.phoneNumber ? (
                  <p>
                    {userData.phoneNumber}
                  </p>
                ) : (
                  <p>
                    Not Given
                  </p>
                )}
                  </dd>
                </div>
              </dl>
            </div>
          </div>

          {/* <div className="container flex justify-between items-center pt-10 flex-wrap">
            <div className="info">
              {userData.firstName ? (
                <p className="font-bold text-xl mt-3">
                  First Name:{userData.firstName}
                </p>
              ) : (
                <p className="font-bold text-xl mt-3">First Name: Not Given</p>
              )}
              {userData.lastName ? (
                <p className="font-bold text-xl mt-3">
                  Last Name: {userData.lastName}
                </p>
              ) : (
                <p className="font-bold text-xl mt-3">Last Name: Not Given</p>
              )}
              {userData.firstName && userData.lastName ? (
                <p className="font-bold text-xl mt-3">
                  Name: {userData.firstName + " " + userData.lastName}
                </p>
              ) : user?.displayName ? (
                <p className="font-bold text-xl mt-3">
                  Name: {user?.displayName}
                </p>
              ) : (
                <p className="font-bold text-xl mt-3">Name: Not Given</p>
              )}
              <p className="font-bold text-xl my-3">Email: {userData?.email}</p>
            </div>
            {userData && (
              <div className="info">
                {
                  <p className="font-bold text-xl">
                    Role:{" "}
                    {userData.category.charAt(0).toUpperCase() +
                      userData.category.slice(1)}
                  </p>
                }

                {userData.gender ? (
                  <p className="font-bold text-xl mt-3">
                    Gender: {userData.gender}
                  </p>
                ) : (
                  <p className="font-bold text-xl mt-3">Gender: Not Given</p>
                )}
                {userData.dob ? (
                  <p className="font-bold text-xl mt-3">
                    Date of birth:{userData.dob}
                  </p>
                ) : (
                  <p className="font-bold text-xl mt-3">
                    Date of birth: Not Given
                  </p>
                )}
                {userData.phoneNumber ? (
                  <p className="font-bold text-xl mt-3">
                    Phone Number: {userData.phoneNumber}
                  </p>
                ) : (
                  <p className="font-bold text-xl mt-3">
                    Phone Number: Not Given
                  </p>
                )}
              </div>
            )}
          </div> */}
        </div>

        <Footer />
      </div>
    );
}
